<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on FE異世界物語</title>
    <link>https://kinko25.tech/tags/git/</link>
    <description>Recent content in Git on FE異世界物語</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 04 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kinko25.tech/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitとGithubの違いについて</title>
      <link>https://kinko25.tech/blog/git%E3%81%A8github%E3%81%AE%E9%81%95%E3%81%84%E3%81%A8%E3%81%AF/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kinko25.tech/blog/git%E3%81%A8github%E3%81%AE%E9%81%95%E3%81%84%E3%81%A8%E3%81%AF/</guid>
      <description>GitとGithubの違いとは？ GitとGithubの違いは、なんだと思いますか？ パッと答えられる人は、普段でgitを使っているのではないだろうか。
知らないという方は、これを機に知っておいたほうが良さそうですね。
GitとGithubの違いとは？ Gitは、結論から言うと、ツール。
Githubは、結論から言うと、サービス。
ちなみに、私が利用しているこのサーバーはgithubのサービスです。
Gitとは &amp;quot;「Git」は、「ソースコードのバージョンを管理するツール」の名前。 システム開発では複数の開発者によってソースコードが書き換わります。 いつ誰がどこを変えたのか？ 最新のバージョンはどれか？ など、 ソースコードのバージョンを把握する必要があります。 このバージョン管理をするツールの1つが「Git」です。&amp;quot;  参考URL：いまさら聞けないGitとGitHubの違いって何？ https://www.i3design.jp/in-pocket/3111
Githubとは &amp;quot;「GitHub」は、「Gitを利用した、開発者を支援するWebサービス」の名前です。 GitHubは、クラウド上でGitを用いたバージョン管理をすることができ、さらにGitには無い、 開発者に便利な機能を追加しています。いまやユーザ数は1000万人を超え、 世界中のソフトウェア開発に利用されているサービスです。&amp;quot;  参考URL：いまさら聞けないGitとGitHubの違いって何？ https://www.i3design.jp/in-pocket/3111
Gitの使い方を理解しよう ググると、だいたい「サルでもわかるGit」みたいなのが出てきますが、
ぶっちゃけわかりません！！ｗ
個人的に、一番わかりやすいのはGithub社員の方が来日した際に、イベントの内容。
これに自分も参加していたのですが、本当にわかりやすかったですねー。
かなり長めの動画なので、時間がある時にみながらコマンドを叩くことをオススメします。
GitHub社員が来日!! Github教育エバンジェリストによるGithubハンズオン
https://schoo.jp/class/2449
あとは自分でGithubに登録してリポジトリを作って、 作業してみるのもいいと思います。
Git初心者がGitを業務で利用する時の注意 Gitを理解していない人がGitを利用するのは、かなり危険だと思います。
複数人で同時作業を行うことがよくあるのですが、
理解していない人が一人でもいるとコンフリクト(衝突)を起こしてしまい、
なぜ、Errorが出ているのかもよくわかっておらず、無視してそのまま無理矢理pushしようとします。
めっちゃ怖いですよね。。。
なので、かなり大規模な内容は、ブランチを個々で切って、
担当を分担して作業するのが得策かと思います。
その作業内容をmasterブランチでマージする際は、
「プルリクエスト」という機能を使うことで、
作業内容に問題がないかなど、チェックを挟めます。
マージする際は、理解している人にやってもらいたいですね。
よく使うGitコマンド Gitを利用する際、ソースツリーなどソフトウェアを使っている方が多いのですが、
私は、ターミナル派なので、コマンドを使います。
実際、業務でよく使うコマンドについてもご紹介したいと思います。
ほとんど差分しかpushしないので、 差分をAddする時は、
$ git status ## 現在の状況 $ git add -u ## 差分のみadd $ git commit -m&amp;quot;サイト名 - ページ名 変更・修正・追加した箇所&amp;quot; $ git fetch ## リモートの最新情報を見に行く $ git pull origin master ## 最新情報に変更などがあれば、pull $ git push origin master ## そして、push  毎回打つのもめんどくさいので、</description>
    </item>
    
  </channel>
</rss>