<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on フロントエンド異世界物語</title>
    <link>https://thekronos07.github.io/kinko-blog/blog/</link>
    <description>Recent content in Blog on フロントエンド異世界物語</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 02 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thekronos07.github.io/kinko-blog/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【後編】Hugo &#43; Github Pagesで作ってみた</title>
      <link>https://thekronos07.github.io/kinko-blog/blog/%E5%BE%8C%E7%B7%A8hugo-&#43;-github-pages%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekronos07.github.io/kinko-blog/blog/%E5%BE%8C%E7%B7%A8hugo-&#43;-github-pages%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>Github Pagesにブログを開設してみた。 ブログの基本設定をカスタムしてみる。 私がいじった設定は、主にconfig.tomlのSNSシェアボタンの表示・非表示設定や、 アイコンなどの設定、サイトのタイトル名などを変更してあります。
あまりボタンが多すぎても邪魔くさいと感じてしまう人間なので、かなり削ってる方だと思います。
サイトをローカルで見てみる カスタムしていると、「どこが、どんな風に変わったのか」がわからないので、 ローカルサーバーを立てて確認したいと思います。 ターミナルを開いて、下記コマンドをblogディレクトリ内で叩いてみましょう。
$ hugo server Building sites … | EN +------------------+----+ Pages | 31 Paginator pages | 1 Non-page files | 0 Static files | 35 Processed images | 0 Aliases | 7 Sitemaps | 1 Cleaned | 0  コマンドを実行すると、「Building sites …」といった感じで、 ローカルサーバーが立ちます。 localhost:1313/で見れるかと思います。 問題なければ、本番反映しましょう。
$ ./deploy.sh # このコマンドだけ叩けば、本番反映されます。  Google Analyticsを設定する Downloadしたテーマにもよりますが、 config.tomlの最初の方に
googleAnalytics = &amp;quot;&amp;quot;  という項目ありますので、
googleAnalytics = &amp;quot;UA-000000-1&amp;quot;  と、ご自身のUAから始まるものをいれてビルドしてあげるだけです。</description>
    </item>
    
    <item>
      <title>【前編】Hugo &#43; Github Pagesで作ってみた</title>
      <link>https://thekronos07.github.io/kinko-blog/blog/%E5%89%8D%E7%B7%A8hugo-&#43;-github-pages%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thekronos07.github.io/kinko-blog/blog/%E5%89%8D%E7%B7%A8hugo-&#43;-github-pages%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>Github Pagesにブログを開設してみた。 無料サーバーでブログを運営したい。 「金払ってワードプレスで作るのも、勿体無い。。。」 「はてなブログなどは楽だけど、自由度が。。。。」と思い、Github Pagesを使って、 ブログを開設してみました。
最初、Jekyllでやろうとしましたが、Windowsとの相性が悪いって書かれてたので、
Hugoでやることに。
出来上がってから、Jekyllをchocolateyでできるっぽいことを知ったのですが、 もう作ってしまったものはしょうがないので、
「Jekyllでやりたい！」という人は試してみてはどうでしょう。
テーマ一覧を見ると、Jekyllの方が充実してると思う。
Hugoテーマリスト：
https://themes.gohugo.io/
jekyllテーマリスト ：
http://jekyllthemes.org/
Hugoはデザイン的に、なんだかイケてないというか・・・。ｗ
Hugoとは？ ・golangで作られた静的ジェネレーター
・他のツールのように、デプロイコマンドがない
・HTML/CSSを出力する動作が早い
かなりざっくりですが。
メリット ・ワードプレスのようなログインがない
・テーマの自由度
・記事作成後にコマンド一回叩けば本番反映される
・Github Pagesを使ってるので無料
・デフォルトのドメインであれば、SSL化されてる
などなどｗ
環境 ・Windows7 64bit
・git
・chocolatey
・ターミナルはbash
まず、環境構築 では、早速インストールした手順をざっくり紹介していきます。
Hugoを使うきっかけはこれ。
https://onoxeve.com/posts/hugo-on-github-pages/
上記の記事内では、Homebrewを紹介しているが、WindowsではHomebrewを使えないため、
この記事では、Windowsを使っている人向けになります。
Homebrewの代わりとなるchocolateyをコマンドプロンプトから入れた。
 ## 下記のコマンドをコピペで入力。 @&amp;quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&amp;quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &amp;quot;iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))&amp;quot; &amp;amp;&amp;amp; SET &amp;quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&amp;quot;  参考URL：https://chocolatey.org/install#installing-chocolatey インストール後、VS codeの再起動を行い、ターミナルでchocolateyコマンドを叩けば、VS codeでも使えることがわかる。
Hugoを入れる chocolateyコマンドが使えるのを確認後、
# 上記の工程が完了したら、ターミナルで下記コマンドを叩いてください。 $ choco install hugo  hugoのインストールが完了したら ターミナルでgit管理するディレクトリを作成していきます。</description>
    </item>
    
  </channel>
</rss>